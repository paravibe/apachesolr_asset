<?php
/**
 * @file
 * Indexer for the userhook_apachesolr_entity_info_alter entities for the Apachesolr module.
 */

/**
 * Implements hook_entity_info_alter().
 */
function apachesolr_asset_apachesolr_entity_info_alter(&$entity_info) {
  $entity_info['asset']['indexable'] = TRUE;
  $entity_info['asset']['status callback'] = 'apachesolr_asset_status_callback';
  $entity_info['asset']['document callback'][] = 'apachesolr_asset_solr_document';
  $entity_info['asset']['reindex callback'] = 'apachesolr_asset_solr_reindex';
  $entity_info['asset']['index_table'] = 'apachesolr_index_entities_asset';
}

/**
 * Builds the user-specific information for a Solr document.
 *
 * @param ApacheSolrDocument $document
 *   The Solr document we are building up.
 * @param stdClass $entity
 *   The entity we are indexing.
 * @param string $entity_type
 *   The type of entity we're dealing with.
 */
function apachesolr_asset_solr_document(ApacheSolrDocument $document, $asset, $entity_type) {
  $document->label = apachesolr_clean_text($asset->title);
  $document->entity_type = $entity_type;
  $document->entity_id = $asset->aid;

  $build = $asset->view('search_index');
  $text = drupal_render($build);
  $document->content = apachesolr_clean_text($text);

  $documents = array();
  $documents[] = $document;
  return $documents;
}

/**
 * Reindexing callback for ApacheSolr, for assets.
 *
 * @param string $env_id
 *   The solr environment
 * @param string|null $bundle
 *   (optional) The bundle type to reindex. If not used
 *   all bundles will be reindexed.
 *
 * @throws Exception
 */
function apachesolr_asset_solr_reindex($env_id, $bundle = NULL) {
  $indexer_table = apachesolr_get_indexer_table('asset');
  $transaction = db_transaction();
  $env_id = apachesolr_default_environment();
  try {
    $delete = db_delete($indexer_table);
    $delete->condition('status', 1);
    $delete->condition('entity_type', 'asset');

    if (!empty($bundle)) {
      $delete->condition('bundle', $bundle);
    }

    $delete->execute();

    $indexable_bundles = apachesolr_get_index_bundles($env_id, 'asset');

    if ($bundle && !empty($indexable_bundles) && !in_array($bundle, $indexable_bundles)) {
      // The bundle specified is not in the indexable bundles list.
      return;
    }

    // Select the assets to be indexed.
    $select = db_select('asset', 'a');
    $select->addExpression("'asset'", 'entity_type');
    $select->addField('a', 'aid', 'entity_id');
    $select->addField('a','type', 'bundle');
    $select->addExpression(REQUEST_TIME, 'changed');

    // Insert the selected taxonomy_term data into the index table.
    $insert = db_insert($indexer_table)
      ->fields(array('entity_id', 'bundle', 'entity_type', 'changed'))
      ->from($select)
      ->execute();
  }
  catch (Exception $e) {
    throw $e;
  }
}

/**
 * Status callback for ApacheSolr, for terms.
 *
 * @param int $entity_id
 *     ID of the asset to check.
 * @param string $entity_type
 *     The string "asset".
 *
 * @return boolean
 *     Truthy when the entity should be public in search results.
 */
function apachesolr_asset_status_callback($entity_id, $entity_type) {
  // All assets should be visible to all users.
  return TRUE;
}
